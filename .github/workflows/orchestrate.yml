name: orchestrate

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]

jobs:
  orchestrate:
    runs-on: ubuntu-latest
    env:
      TF_IN_AUTOMATION: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6
          terraform_wrapper: true

      # --- OPTIONAL: Next.js Build (falls du app/nextjs hast) ---
      - name: Install deps (Next.js)
        if: ${{ hashFiles('app/nextjs/package.json') != '' }}
        working-directory: app/nextjs
        run: |
          npm ci || npm install
          npm run build --if-present

      # --- Terraform nur ausführen, wenn der Ordner und .tf-Dateien existieren ---
      - name: Check Terraform folder
        id: tfcheck
        run: |
          if [ -d "infra/terraform" ] && ls infra/terraform/*.tf >/dev/null 2>&1; then
            echo "present=true" >> "$GITHUB_OUTPUT"
          else
            echo "present=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Terraform init
        if: ${{ steps.tfcheck.outputs.present == 'true' }}
        run: terraform -chdir=infra/terraform init -input=false

      - name: Terraform validate
        if: ${{ steps.tfcheck.outputs.present == 'true' }}
        run: terraform -chdir=infra/terraform validate

      - name: Terraform plan
        if: ${{ steps.tfcheck.outputs.present == 'true' }}
        env:
          TF_VAR_domain: ${{ vars.APP_DOMAIN }}
          TF_VAR_cloudflare_api_token: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          TF_VAR_vercel_api_token: ${{ secrets.VERCEL_API_TOKEN }}
          TF_VAR_database_url: ${{ secrets.DATABASE_URL }}
          TF_VAR_stripe_secret_key: ${{ secrets.STRIPE_SECRET_KEY }}
          TF_VAR_stripe_webhook_secret: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
        run: terraform -chdir=infra/terraform plan -input=false -no-color

      - name: Skip notice (no infra/terraform)
        if: ${{ steps.tfcheck.outputs.present != 'true' }}
        run: echo "No infra/terraform/*.tf found – skipping Terraform steps."
